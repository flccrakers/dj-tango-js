{"ast":null,"code":"import _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/preferences-dialog.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTranslate } from '../locales/localeUtils';\nimport TextField from \"@material-ui/core/TextField\";\nvar styles = {\n  input: {\n    opacity: \"0\",\n    width: \"0px\",\n    height: \"0px\"\n  },\n  selectFileBloc: {\n    display: 'flex',\n    flex: '1 1 auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '15px'\n  }\n};\n\nvar templateClassName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(templateClassName, _Component);\n\n  function templateClassName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, templateClassName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(templateClassName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCloseDialog = function () {\n      _this.props.dispatch(dialogActions.closeDialog());\n    };\n\n    return _this;\n  }\n\n  _createClass(templateClassName, [{\n    key: \"getContent\",\n    value: function getContent() {\n      var preferences,\n          ret = [];\n      preferences = this.props.preferences;\n      ret.push(this.getBaseDir(preferences));\n      return ret;\n    }\n  }, {\n    key: \"getBaseDir\",\n    value: function getBaseDir(preferences) {\n      var _this2 = this;\n\n      var translate = getTranslate(this.props.locale);\n      return React.createElement(\"div\", {\n        key: 'preferences_baseDir',\n        style: {\n          display: 'flex',\n          flex: '1 1 auto',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        value: preferences.baseDir,\n        label: translate('PREFERENCES.BASE_DIRECTORY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: function ref(el) {\n          _this2.inputRef = el;\n        },\n        accept: \"text/csv\",\n        style: styles.input,\n        id: \"raised-button-file\",\n        type: \"file\",\n        onChange: this.handleSelectFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: 'text',\n        component: \"span\",\n        color: 'secondary',\n        style: {\n          marginLeft: '25px'\n        },\n        onClick: function onClick() {\n          _this2.inputRef.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, translate('PREFERENCES.SELECT_BASE_DIRECTORY')));\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      var translate = getTranslate(this.props.locale);\n      return [React.createElement(Button, {\n        key: 'closeButton',\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, translate('CLOSE'))];\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return getTranslate(this.props.locale)('MENU.PREFERENCES');\n    }\n    /******************************************************/\n\n    /*Fixed part of the dialog, don't touch that          */\n\n    /******************************************************/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialog = this.props.dialog;\n      return React.createElement(Dialog, {\n        open: dialog.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: dialog.dialogTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.getTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.getContent()), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.getActions()));\n    }\n  }]);\n\n  return templateClassName;\n}(Component);\n\nexport default connect(function (store) {\n  return {\n    dialog: store.dialog,\n    locale: store.locale,\n    preferences: store.preferences\n  };\n})(templateClassName);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/preferences-dialog.js"],"names":["React","Component","connect","Dialog","DialogActions","DialogContent","DialogTitle","dialogActions","Button","getTranslate","TextField","styles","input","opacity","width","height","selectFileBloc","display","flex","justifyContent","alignItems","marginTop","templateClassName","handleCloseDialog","props","dispatch","closeDialog","preferences","ret","push","getBaseDir","translate","locale","baseDir","el","inputRef","handleSelectFile","marginLeft","click","dialog","open","dialogTitle","getTitle","getContent","getActions","store"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {getTranslate} from '../locales/localeUtils';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n  input: {\n    opacity: \"0\",\n    width: \"0px\",\n    height: \"0px\"\n  },\n  selectFileBloc: {\n    display: 'flex',\n    flex: '1 1 auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '15px',\n  }\n};\nclass templateClassName extends Component {\n\n  getContent() {\n    let preferences: preferencesDTO, ret = [];\n    preferences = this.props.preferences;\n    ret.push(this.getBaseDir(preferences));\n\n    return ret;\n  };\n\n  getBaseDir(preferences: preferencesDTO) {\n    let translate = getTranslate(this.props.locale);\n    return (\n      <div key={'preferences_baseDir'} style={{display: 'flex', flex: '1 1 auto', alignItems: 'center'}}>\n        <TextField\n          autoFocus\n          value={preferences.baseDir}\n          label={translate('PREFERENCES.BASE_DIRECTORY')}\n        />\n        <input\n          ref={el => {\n            this.inputRef = el;\n          }}\n          accept=\"text/csv\"\n          style={styles.input}\n          id=\"raised-button-file\"\n          type=\"file\"\n          onChange={this.handleSelectFile}\n        />\n        <Button\n          variant={'text'}\n          component=\"span\"\n          color={'secondary'}\n          style={{marginLeft:'25px'}}\n          onClick={() => {\n            this.inputRef.click()\n          }}\n        >\n\n          {translate('PREFERENCES.SELECT_BASE_DIRECTORY')}\n        </Button>\n      </div>\n    );\n  }\n\n  getActions() {\n    let translate = getTranslate(this.props.locale);\n    return [\n      <Button\n        key={'closeButton'}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={this.handleCloseDialog}>\n        {translate('CLOSE')}\n      </Button>\n    ];\n  }\n\n  getTitle() {\n    return getTranslate(this.props.locale)('MENU.PREFERENCES')\n  }\n\n\n  /******************************************************/\n  /*Fixed part of the dialog, don't touch that          */\n  /******************************************************/\n  handleCloseDialog = () => {\n    this.props.dispatch(dialogActions.closeDialog());\n  };\n\n  render() {\n    let dialog = this.props.dialog;\n    return (\n      <Dialog open={dialog.open}>\n        <DialogTitle id={dialog.dialogTitle}>{this.getTitle()}</DialogTitle>\n        <DialogContent>\n          {this.getContent()}\n        </DialogContent>\n        <DialogActions>\n          {this.getActions()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default connect(store => {\n  return {\n    dialog: store.dialog,\n    locale: store.locale,\n    preferences: store.preferences,\n  };\n})(templateClassName);\n\n"]},"metadata":{},"sourceType":"module"}