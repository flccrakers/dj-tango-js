{"ast":null,"code":"import * as tangoDataManagement from '../../services/tangoDataManagement';\n\nfunction updateTango(payload) {\n  return {\n    type: 'UPDATE_CURRENT_TANGO',\n    payload: payload\n  };\n}\n\nexport function updateCurrentTango(tango, enqueueSnackbar) {\n  return function (dispatch) {\n    tangoDataManagement.getTangoFile(tango._id).then(function (tangoFile) {\n      // console.log(tangoFile);\n      // console.log(typeof tangoFile);\n      if (typeof tangoFile === \"string\" && tangoFile !== undefined) {\n        dispatch(updateTheSong(tango, tangoFile));\n      } else if (typeof tangoFile === \"object\" || tangoFile === undefined) {\n        var variant = 'error';\n\n        if (tangoFile !== undefined) {\n          enqueueSnackbar(tangoFile.GeneralException, {\n            variant: variant\n          });\n        } else {\n          enqueueSnackbar(\"The file for \\\"\" + tango.title + \"\\\" is undefined\", {\n            variant: variant\n          }); // (console.error(\"The tango file is undefined\"));\n        }\n\n        dispatch(updateTheSong(tango, undefined));\n      }\n    });\n  };\n}\n\nfunction updateTheSong(tango, tangoFile) {\n  console.log(tangoFile);\n  return function (dispatch) {\n    var payload = {\n      tango: tango,\n      song: tangoFile\n    };\n    dispatch(updatePause(false));\n    dispatch(updateTango(payload));\n  };\n}\n/**\n * Store the progress of the current tango\n * @param value in milliseconds\n */\n\n\nexport function progress(value) {\n  return {\n    type: 'PROGRESS',\n    payload: value\n  };\n}\n/*export function storePlayerEl(element) {\n  return {\n    type: 'STORE_PLAYER',\n    payload: element,\n  }\n}*/\n\n/*export function play(){\n  this.getState().playerEl.play();\n}*/\n\n/*export function stop(player, duration){\n  // return (dispatch, getState) => {\n    let state = getState().player;\n    console.log(state);\n    plalyer.pause();\n    // state.playerEl.currentTime = state.currentTango.duration / 1000;\n    return{type:'DO_NOTHING'}\n    // this.rap.audioEl.currentTime=this.props.playerData.currentTango.duration/1000;\n  // }\n\n}*/\n\nexport function updateVolume(newValue) {\n  if (newValue < 0) newValue = 0;\n  return {\n    type: 'UPDATE_VOLUME',\n    payload: newValue\n  };\n}\nexport function saveAudioEl(audioEl) {\n  return {\n    type: 'SAVE_AUDIO_ELEMENT',\n    payload: audioEl\n  };\n}\nexport function updatePause(value) {\n  return {\n    type: 'UPDATE_PAUSE',\n    payload: value\n  };\n}","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/redux/actions/playerActions.js"],"names":["tangoDataManagement","updateTango","payload","type","updateCurrentTango","tango","enqueueSnackbar","dispatch","getTangoFile","_id","then","tangoFile","undefined","updateTheSong","variant","GeneralException","title","console","log","song","updatePause","progress","value","updateVolume","newValue","saveAudioEl","audioEl"],"mappings":"AAAA,OAAO,KAAKA,mBAAZ,MAAqC,oCAArC;;AAGA,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE,sBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAKD;;AAED,OAAO,SAASE,kBAAT,CAA4BC,KAA5B,EAA6CC,eAA7C,EAA8D;AACnE,SAAO,UAAUC,QAAV,EAAoB;AACzBP,IAAAA,mBAAmB,CAACQ,YAApB,CAAiCH,KAAK,CAACI,GAAvC,EAA4CC,IAA5C,CAAiD,UAAAC,SAAS,EAAI;AAC5D;AACA;AACA,UAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,KAAKC,SAAnD,EAA8D;AAC5DL,QAAAA,QAAQ,CAACM,aAAa,CAACR,KAAD,EAAQM,SAAR,CAAd,CAAR;AACD,OAFD,MAEO,IAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,KAAKC,SAAnD,EAA8D;AACnE,YAAIE,OAAO,GAAG,OAAd;;AACA,YAAIH,SAAS,KAAKC,SAAlB,EAA6B;AAC3BN,UAAAA,eAAe,CAACK,SAAS,CAACI,gBAAX,EAA6B;AAACD,YAAAA,OAAO,EAAPA;AAAD,WAA7B,CAAf;AACD,SAFD,MAEO;AACLR,UAAAA,eAAe,CAAC,oBAAoBD,KAAK,CAACW,KAA1B,GAAkC,iBAAnC,EAAsD;AAACF,YAAAA,OAAO,EAAPA;AAAD,WAAtD,CAAf,CADK,CAEL;AACD;;AACDP,QAAAA,QAAQ,CAACM,aAAa,CAACR,KAAD,EAAQO,SAAR,CAAd,CAAR;AACD;AACF,KAfD;AAgBD,GAjBD;AAkBD;;AAED,SAASC,aAAT,CAAuBR,KAAvB,EAA8BM,SAA9B,EAAyC;AACvCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,SAAO,UAAUJ,QAAV,EAAoB;AACzB,QAAIL,OAAO,GAAG;AACZG,MAAAA,KAAK,EAAEA,KADK;AAEZc,MAAAA,IAAI,EAAER;AAFM,KAAd;AAIAJ,IAAAA,QAAQ,CAACa,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAb,IAAAA,QAAQ,CAACN,WAAW,CAACC,OAAD,CAAZ,CAAR;AACD,GAPD;AAQD;AAED;;;;;;AAIA,OAAO,SAASmB,QAAT,CAAkBC,KAAlB,EAAyB;AAE9B,SAAO;AACLnB,IAAAA,IAAI,EAAE,UADD;AAELD,IAAAA,OAAO,EAAEoB;AAFJ,GAAP;AAKD;AAED;;;;;;;AAOA;;;;AAIA;;;;;;;;;;;;AAYA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,MAAIA,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAG,CAAX;AAClB,SAAO;AACLrB,IAAAA,IAAI,EAAE,eADD;AAELD,IAAAA,OAAO,EAAEsB;AAFJ,GAAP;AAKD;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAO;AACLvB,IAAAA,IAAI,EAAE,oBADD;AAELD,IAAAA,OAAO,EAAEwB;AAFJ,GAAP;AAID;AAED,OAAO,SAASN,WAAT,CAAqBE,KAArB,EAA4B;AACjC,SAAO;AACLnB,IAAAA,IAAI,EAAE,cADD;AAELD,IAAAA,OAAO,EAAEoB;AAFJ,GAAP;AAID","sourcesContent":["import * as tangoDataManagement from '../../services/tangoDataManagement';\n\n\nfunction updateTango(payload) {\n  return {\n    type: 'UPDATE_CURRENT_TANGO',\n    payload,\n  }\n\n}\n\nexport function updateCurrentTango(tango: tangoDTO, enqueueSnackbar) {\n  return function (dispatch) {\n    tangoDataManagement.getTangoFile(tango._id).then(tangoFile => {\n      // console.log(tangoFile);\n      // console.log(typeof tangoFile);\n      if (typeof tangoFile === \"string\" && tangoFile !== undefined) {\n        dispatch(updateTheSong(tango, tangoFile))\n      } else if (typeof tangoFile === \"object\" || tangoFile === undefined) {\n        let variant = 'error';\n        if (tangoFile !== undefined) {\n          enqueueSnackbar(tangoFile.GeneralException, {variant});\n        } else {\n          enqueueSnackbar(\"The file for \\\"\" + tango.title + \"\\\" is undefined\", {variant});\n          // (console.error(\"The tango file is undefined\"));\n        }\n        dispatch(updateTheSong(tango, undefined                                             ));\n      }\n    });\n  }\n}\n\nfunction updateTheSong(tango, tangoFile) {\n  console.log(tangoFile);\n  return function (dispatch) {\n    let payload = {\n      tango: tango,\n      song: tangoFile,\n    };\n    dispatch(updatePause(false));\n    dispatch(updateTango(payload));\n  }\n}\n\n/**\n * Store the progress of the current tango\n * @param value in milliseconds\n */\nexport function progress(value) {\n\n  return {\n    type: 'PROGRESS',\n    payload: value\n  }\n\n}\n\n/*export function storePlayerEl(element) {\n  return {\n    type: 'STORE_PLAYER',\n    payload: element,\n  }\n}*/\n\n/*export function play(){\n  this.getState().playerEl.play();\n}*/\n\n/*export function stop(player, duration){\n  // return (dispatch, getState) => {\n    let state = getState().player;\n    console.log(state);\n    plalyer.pause();\n    // state.playerEl.currentTime = state.currentTango.duration / 1000;\n    return{type:'DO_NOTHING'}\n    // this.rap.audioEl.currentTime=this.props.playerData.currentTango.duration/1000;\n  // }\n\n}*/\n\nexport function updateVolume(newValue) {\n  if (newValue < 0) newValue = 0;\n  return {\n    type: 'UPDATE_VOLUME',\n    payload: newValue,\n  }\n\n}\n\nexport function saveAudioEl(audioEl) {\n  return {\n    type: 'SAVE_AUDIO_ELEMENT',\n    payload: audioEl,\n  }\n}\n\nexport function updatePause(value) {\n  return {\n    type: 'UPDATE_PAUSE',\n    payload: value,\n  }\n}"]},"metadata":{},"sourceType":"module"}