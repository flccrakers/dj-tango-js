{"ast":null,"code":"export function getTranslate(locale) {\n  return function (keyToTranslate) {\n    var ret = \"\";\n    var position = 0;\n\n    for (var i in locale.language) {\n      if (locale.language[i][\"active\"] === true) position = i;\n    }\n\n    if (!locale.translations[keyToTranslate] || !locale.translations[keyToTranslate][position]) {\n      ret = \"Missing localized key \" + keyToTranslate + \" for language \" + locale.language[position][\"code\"];\n    } else {\n      ret = locale.translations[keyToTranslate][position];\n    }\n\n    return ret;\n  };\n}\nexport function convertDatabaseLanguageIntoNormalised(languageCode) {\n  switch (languageCode) {\n    case 'en-US':\n      {\n        return 'en-us';\n      }\n\n    case 'fr-FR':\n      {\n        return 'fr-fr';\n      }\n\n    default:\n      return languageCode;\n  }\n}\nexport function convertNormalisedLanguageIntoDatabase(languageCode) {\n  switch (languageCode) {\n    case 'en-us':\n      {\n        return 'en-US';\n      }\n\n    case 'fr-fr':\n      {\n        return 'fr-FR';\n      }\n\n    default:\n      return languageCode;\n  }\n}","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/dj-tango-js/IHM/src/components/locales/localeUtils.js"],"names":["getTranslate","locale","keyToTranslate","ret","position","i","language","translations","convertDatabaseLanguageIntoNormalised","languageCode","convertNormalisedLanguageIntoDatabase"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,SAAO,UAAUC,cAAV,EAA0B;AAC/B,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,QAAQ,GAAG,CAAf;;AAEA,SAAK,IAAIC,CAAT,IAAcJ,MAAM,CAACK,QAArB,EAA+B;AAC7B,UAAIL,MAAM,CAACK,QAAP,CAAgBD,CAAhB,EAAmB,QAAnB,MAAiC,IAArC,EAA2CD,QAAQ,GAAGC,CAAX;AAC5C;;AAED,QAAI,CAACJ,MAAM,CAACM,YAAP,CAAoBL,cAApB,CAAD,IAAwC,CAACD,MAAM,CAACM,YAAP,CAAoBL,cAApB,EAAoCE,QAApC,CAA7C,EAA4F;AAC1FD,MAAAA,GAAG,GACD,2BACAD,cADA,GAEA,gBAFA,GAGAD,MAAM,CAACK,QAAP,CAAgBF,QAAhB,EAA0B,MAA1B,CAJF;AAKD,KAND,MAMO;AACLD,MAAAA,GAAG,GAAGF,MAAM,CAACM,YAAP,CAAoBL,cAApB,EAAoCE,QAApC,CAAN;AACD;;AACD,WAAOD,GAAP;AACD,GAlBD;AAmBD;AAED,OAAO,SAASK,qCAAT,CAA+CC,YAA/C,EAAqE;AAC1E,UAAQA,YAAR;AACE,SAAI,OAAJ;AAAa;AACX,eAAO,OAAP;AACD;;AACD,SAAI,OAAJ;AAAa;AACX,eAAO,OAAP;AACD;;AACD;AACE,aAAOA,YAAP;AARJ;AAUD;AAED,OAAO,SAASC,qCAAT,CAA+CD,YAA/C,EAAqE;AAC1E,UAAQA,YAAR;AACE,SAAI,OAAJ;AAAa;AACX,eAAO,OAAP;AACD;;AACD,SAAI,OAAJ;AAAa;AACX,eAAO,OAAP;AACD;;AACD;AACE,aAAOA,YAAP;AARJ;AAUD","sourcesContent":["export function getTranslate(locale) {\n  return function (keyToTranslate) {\n    let ret = \"\";\n    let position = 0;\n\n    for (let i in locale.language) {\n      if (locale.language[i][\"active\"] === true) position = i;\n    }\n\n    if (!locale.translations[keyToTranslate] || !locale.translations[keyToTranslate][position]) {\n      ret =\n        \"Missing localized key \" +\n        keyToTranslate +\n        \" for language \" +\n        locale.language[position][\"code\"];\n    } else {\n      ret = locale.translations[keyToTranslate][position];\n    }\n    return ret;\n  };\n}\n\nexport function convertDatabaseLanguageIntoNormalised(languageCode: string) {\n  switch (languageCode) {\n    case'en-US': {\n      return 'en-us'\n    }\n    case'fr-FR': {\n      return 'fr-fr'\n    }\n    default:\n      return languageCode\n  }\n}\n\nexport function convertNormalisedLanguageIntoDatabase(languageCode: string) {\n  switch (languageCode) {\n    case'en-us': {\n      return 'en-US'\n    }\n    case'fr-fr': {\n      return 'fr-FR'\n    }\n    default:\n      return languageCode\n  }\n}\n"]},"metadata":{},"sourceType":"module"}