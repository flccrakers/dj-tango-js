{"ast":null,"code":"import _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTranslate } from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nvar styles = {\n  input: {\n    opacity: \"0\",\n    width: \"0px\",\n    height: \"0px\"\n  },\n  selectFileBloc: {\n    display: 'flex',\n    flex: '1 1 auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '15px'\n  }\n};\n\nvar ImportDataBaseDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImportDataBaseDialog, _Component);\n\n  function ImportDataBaseDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ImportDataBaseDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImportDataBaseDialog).call(this, props));\n\n    _this.handleSelectFile = function (event) {\n      console.log(\"CHANGINGÂ FILE\"); // this.setState({databaseFile: event.target.files[0]});\n\n      _this.setState({\n        databaseFile: 'COUCOU'\n      });\n    };\n\n    _this.handleImportDataBase = function () {\n      console.log(_this.state.databaseFile);\n    };\n\n    _this.handleCloseDialog = function () {\n      _this.props.dispatch(dialogActions.closeDialog());\n    };\n\n    _this.state = {\n      databaseFile: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ImportDataBaseDialog, [{\n    key: \"getContentText\",\n    value: function getContentText() {\n      return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      console.log(this.state.databaseFile);\n      var textValue = this.state.databaseFile === undefined ? '' : this.state.databaseFile.name;\n      return React.createElement(\"div\", {\n        style: styles.selectFileBloc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: this.state.name,\n        onChange: this.handleChange('name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        // accept=\"text/csv\"\n        style: styles.input,\n        id: \"raised-button-file\",\n        type: \"file\",\n        onChange: this.handleSelectFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"raised-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: 'text',\n        component: \"span\",\n        color: 'secondary',\n        style: {\n          marginLeft: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Select File\")));\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      var translate = getTranslate(this.props.locale);\n      return [React.createElement(Button, {\n        key: 'cancel_button',\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, translate('CANCEL')), React.createElement(Button, {\n        key: 'import_button',\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleImportDataBase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, translate('IMPORT_DATABASE_BUTTON'))];\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, getTranslate(this.props.locale)('IMPORT_DATABASE'));\n    }\n    /******************************************************/\n\n    /*Fixed part of the dialog, don't touch that          */\n\n    /******************************************************/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialog = this.props.dialog;\n      console.log(this.state.databaseFile);\n      return React.createElement(Dialog, {\n        open: dialog.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.getTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.getContentText()), this.getContent()), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.getActions()));\n    }\n  }]);\n\n  return ImportDataBaseDialog;\n}(Component);\n\nexport default connect(function (store) {\n  return {\n    dialog: store.dialog,\n    locale: store.locale\n  };\n})(ImportDataBaseDialog);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js"],"names":["React","Component","connect","Dialog","DialogActions","DialogContent","DialogTitle","dialogActions","Button","getTranslate","DialogContentText","TextField","styles","input","opacity","width","height","selectFileBloc","display","flex","justifyContent","alignItems","marginTop","ImportDataBaseDialog","props","handleSelectFile","event","console","log","setState","databaseFile","handleImportDataBase","state","handleCloseDialog","dispatch","closeDialog","undefined","locale","textValue","name","handleChange","marginLeft","translate","dialog","open","getTitle","whiteSpace","getContentText","getContent","getActions","store"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,GADJ;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADM;AAMbC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,IAAI,EAAE,UAFQ;AAGdC,IAAAA,cAAc,EAAE,QAHF;AAIdC,IAAAA,UAAU,EAAE,QAJE;AAKdC,IAAAA,SAAS,EAAE;AALG;AANH,CAAf;;IAeMC,oB;;;;;AAEJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;;AADiB,UAqCnBC,gBArCmB,GAqCA,UAAAC,KAAK,EAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAD0B,CAE1B;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD,KAzCkB;;AAAA,UA+DnBC,oBA/DmB,GA+DI,YAAM;AAC3BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKI,KAAL,CAAWF,YAAvB;AACD,KAjEkB;;AAAA,UA2EnBG,iBA3EmB,GA2EC,YAAM;AACxB,YAAKT,KAAL,CAAWU,QAAX,CAAoB3B,aAAa,CAAC4B,WAAd,EAApB;AACD,KA7EkB;;AAEjB,UAAKH,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAEM;AADH,KAAb;AAFiB;AAKlB;;;;qCAGgB;AACf,aAAO3B,YAAY,CAAC,KAAKe,KAAL,CAAWa,MAAZ,CAAZ,CAAgC,sBAAhC,CAAP;AACD;;;iCAGY;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWF,YAAvB;AACA,UAAIQ,SAAS,GAAG,KAAKN,KAAL,CAAWF,YAAX,KAA4BM,SAA5B,GAAwC,EAAxC,GAA6C,KAAKJ,KAAL,CAAWF,YAAX,CAAwBS,IAArF;AAEA,aACE;AAAK,QAAA,KAAK,EAAE3B,MAAM,CAACK,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAa,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWO,IAA/B;AACE,QAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,MAAlB,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AACE;AACA,QAAA,KAAK,EAAE5B,MAAM,CAACC,KAFhB;AAGE,QAAA,EAAE,EAAC,oBAHL;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAE,KAAKY,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAUE;AAAO,QAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAjB;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAA0C,QAAA,KAAK,EAAE,WAAjD;AAA8D,QAAA,KAAK,EAAE;AAACgB,UAAAA,UAAU,EAAE;AAAb,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAVF,CADF;AAkBD;;;iCAQY;AACX,UAAIC,SAAS,GAAGjC,YAAY,CAAC,KAAKe,KAAL,CAAWa,MAAZ,CAA5B;AACA,aAAO,CACL,oBAAC,MAAD;AACE,QAAA,GAAG,EAAE,eADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,OAAO,EAAE,KAAKJ,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGS,SAAS,CAAC,QAAD,CALZ,CADK,EAQL,oBAAC,MAAD;AACE,QAAA,GAAG,EAAE,eADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,KAAKX,oBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGW,SAAS,CAAC,wBAAD,CALZ,CARK,CAAP;AAgBD;;;+BAMU;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMjC,YAAY,CAAC,KAAKe,KAAL,CAAWa,MAAZ,CAAZ,CAAgC,iBAAhC,CAAN,CAAR;AACD;AAGD;;AACA;;AACA;;;;6BAKS;AACP,UAAIM,MAAwB,GAAG,KAAKnB,KAAL,CAAWmB,MAA1C;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWF,YAAvB;AAEA,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEa,MAAM,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKC,QAAL,EAAd,CADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,cAAL,EADH,CADF,EAIG,KAAKC,UAAL,EAJH,CAFF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,EADH,CARF,CADF;AAcD;;;;EAnGgChD,S;;AAsGnC,eAAeC,OAAO,CAAC,UAAAgD,KAAK,EAAI;AAC9B,SAAO;AACLP,IAAAA,MAAM,EAAEO,KAAK,CAACP,MADT;AAELN,IAAAA,MAAM,EAAEa,KAAK,CAACb;AAFT,GAAP;AAID,CALqB,CAAP,CAKZd,oBALY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {getTranslate} from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n  input: {\n    opacity: \"0\",\n    width: \"0px\",\n    height: \"0px\"\n  },\n  selectFileBloc: {\n    display: 'flex',\n    flex: '1 1 auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '15px',\n  }\n};\n\nclass ImportDataBaseDialog extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      databaseFile: undefined,\n    }\n  }\n\n\n  getContentText() {\n    return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n  };\n\n  \n  getContent() {\n    console.log(this.state.databaseFile);\n    let textValue = this.state.databaseFile === undefined ? '' : this.state.databaseFile.name;\n\n    return (\n      <div style={styles.selectFileBloc}>\n        <TextField   value={this.state.name}\n          onChange={this.handleChange('name')}/>\n        <input\n          // accept=\"text/csv\"\n          style={styles.input}\n          id=\"raised-button-file\"\n          type=\"file\"\n          onChange={this.handleSelectFile}\n        />\n        <label htmlFor=\"raised-button-file\">\n          <Button variant={'text'} component=\"span\" color={'secondary'} style={{marginLeft: '25px'}}>\n            Select File\n          </Button>\n        </label>\n      </div>\n    );\n  }\n\n  handleSelectFile = event => {\n    console.log(\"CHANGINGÂ FILE\");\n    // this.setState({databaseFile: event.target.files[0]});\n    this.setState({databaseFile: 'COUCOU'});\n  };\n\n  getActions() {\n    let translate = getTranslate(this.props.locale);\n    return [\n      <Button\n        key={'cancel_button'}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={this.handleCloseDialog}>\n        {translate('CANCEL')}\n      </Button>,\n      <Button\n        key={'import_button'}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={this.handleImportDataBase}>\n        {translate('IMPORT_DATABASE_BUTTON')}\n      </Button>,\n    ];\n  }\n\n  handleImportDataBase = () => {\n    console.log(this.state.databaseFile);\n  };\n\n  getTitle() {\n    return (<div>{getTranslate(this.props.locale)('IMPORT_DATABASE')}</div>);\n  }\n\n\n  /******************************************************/\n  /*Fixed part of the dialog, don't touch that          */\n  /******************************************************/\n  handleCloseDialog = () => {\n    this.props.dispatch(dialogActions.closeDialog());\n  };\n\n  render() {\n    let dialog: dialogReducerDTO = this.props.dialog;\n    console.log(this.state.databaseFile);\n\n    return (\n      <Dialog open={dialog.open}>\n        <DialogTitle>{this.getTitle()}</DialogTitle>\n        <DialogContent>\n          <DialogContentText style={{whiteSpace: 'pre-wrap'}}>\n            {this.getContentText()}\n          </DialogContentText>\n          {this.getContent()}\n        </DialogContent>\n        <DialogActions>\n          {this.getActions()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default connect(store => {\n  return {\n    dialog: store.dialog,\n    locale: store.locale,\n  };\n})(ImportDataBaseDialog);\n\n"]},"metadata":{},"sourceType":"module"}