{"ast":null,"code":"import _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Dialog from \"./dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTranslate } from '../locales/localeUtils';\n\nvar templateClassName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(templateClassName, _Component);\n\n  function templateClassName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, templateClassName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(templateClassName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCloseDialog = function () {\n      _this.props.dispatch(dialogActions.closeDialog());\n    };\n\n    return _this;\n  }\n\n  _createClass(templateClassName, [{\n    key: \"getContent\",\n    value: function getContent() {\n      return React.createElement(\"div\", {\n        style: {\n          whiteSpace: 'pre'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"CONTENT\");\n    }\n  }, {\n    key: \"getActions\",\n    // {getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT')}\n    value: function getActions() {\n      var translate = getTranslate(this.props.locale);\n      return [React.createElement(Button, {\n        variant: \"raised\",\n        color: \"secondary\",\n        onClick: this.handleCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, translate('CLOSE'))];\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, getTranslate(this.props.locale)('IMPORT_DATABASE'));\n    }\n    /******************************************************/\n\n    /*Fixed part of the dialog, don't touch that          */\n\n    /******************************************************/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialog = this.props.dialog;\n      return React.createElement(Dialog, {\n        open: dialog.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.getTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.getContent()), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.getActions()));\n    }\n  }]);\n\n  return templateClassName;\n}(Component);\n\nexport default connect(function (store) {\n  return {\n    dialog: store.dialog,\n    locale: store.locale\n  };\n})(templateClassName);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js"],"names":["React","Component","connect","Dialog","DialogActions","DialogContent","DialogTitle","dialogActions","Button","getTranslate","templateClassName","handleCloseDialog","props","dispatch","closeDialog","whiteSpace","translate","locale","dialog","open","getTitle","getContent","getActions","store"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;IAGMC,iB;;;;;;;;;;;;;;;;;;UA8BJC,iB,GAAoB,YAAM;AACxB,YAAKC,KAAL,CAAWC,QAAX,CAAoBN,aAAa,CAACO,WAAd,EAApB;AACD,K;;;;;;;iCA9BY;AACX,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD;;;AACH;iCACe;AACX,UAAIC,SAAS,GAAGP,YAAY,CAAC,KAAKG,KAAL,CAAWK,MAAZ,CAA5B;AACA,aAAO,CACL,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAE,KAAKN,iBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGK,SAAS,CAAC,OAAD,CAJZ,CADK,CAAP;AAQD;;;+BAEU;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMP,YAAY,CAAC,KAAKG,KAAL,CAAWK,MAAZ,CAAZ,CAAgC,iBAAhC,CAAN,CAAR;AACD;AAGD;;AACA;;AACA;;;;6BAKS;AACP,UAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;AACA,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA,MAAM,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKC,QAAL,EAAd,CADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,EADH,CAFF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,EADH,CALF,CADF;AAWD;;;;EA/C6BrB,S;;AAkDhC,eAAeC,OAAO,CAAC,UAAAqB,KAAK,EAAI;AAC9B,SAAO;AACLL,IAAAA,MAAM,EAAEK,KAAK,CAACL,MADT;AAELD,IAAAA,MAAM,EAACM,KAAK,CAACN;AAFR,GAAP;AAID,CALqB,CAAP,CAKZP,iBALY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dialog from \"./dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {getTranslate} from '../locales/localeUtils';\n\n\nclass templateClassName extends Component {\n\n  getContent() {\n    return (\n      <div style={{whiteSpace: 'pre'}}>\n        CONTENT\n\n      </div>);\n  };\n// {getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT')}\n  getActions() {\n    let translate = getTranslate(this.props.locale);\n    return [\n      <Button\n        variant=\"raised\"\n        color=\"secondary\"\n        onClick={this.handleCloseDialog}>\n        {translate('CLOSE')}\n      </Button>,\n    ];\n  }\n\n  getTitle() {\n    return (<div>{getTranslate(this.props.locale)('IMPORT_DATABASE')}</div>);\n  }\n\n\n  /******************************************************/\n  /*Fixed part of the dialog, don't touch that          */\n  /******************************************************/\n  handleCloseDialog = () => {\n    this.props.dispatch(dialogActions.closeDialog());\n  };\n\n  render() {\n    let dialog = this.props.dialog;\n    return (\n      <Dialog open={dialog.open}>\n        <DialogTitle>{this.getTitle()}</DialogTitle>\n        <DialogContent>\n          {this.getContent()}\n        </DialogContent>\n        <DialogActions>\n          {this.getActions()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default connect(store => {\n  return {\n    dialog: store.dialog,\n    locale:store.locale,\n  };\n})(templateClassName);\n\n"]},"metadata":{},"sourceType":"module"}