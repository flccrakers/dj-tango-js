{"ast":null,"code":"import moment from \"moment/moment\";\nvar currentServerBasePath = 'http://localhost:6767'; // noinspection JSAnnotator\n\nexport function postJSON(url, bodyPayload, queryPayload) {\n  var finalUrl = composeUrl(url, queryPayload);\n  var data = new FormData();\n  data.append(\"json\", JSON.stringify(bodyPayload));\n  console.log(data);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'POST',\n    body: data\n  }).then(function (response) {\n    var contentType = response.headers.get(\"content-type\");\n    console.log(contentType);\n\n    if (contentType && contentType.includes(\"application/json\")) {\n      return response.json();\n    }\n\n    throw new TypeError(\"Oops, we haven't got JSON!\");\n  }).then(function (response) {\n    if (response.hasOwnProperty('IsSuccess')) {\n      // Probably a NXResultContainer\n      if (response.IsSuccess === true) {\n        return response.Payload;\n      } else {\n        throw new Error(response.GeneralException);\n      }\n    } else return response;\n  });\n}\nexport function composeUrl(baseUrl, queryPayload) {\n  var finalUrl = baseUrl;\n\n  if (queryPayload != null) {\n    if (!finalUrl.endsWith(\"?\")) finalUrl = finalUrl + \"?\";\n    finalUrl = Object.keys(queryPayload).reduce(function (currentUrl, key) {\n      var value = queryPayload[key];\n\n      if (Array.isArray(value)) {\n        value.forEach(function (cell) {\n          currentUrl = currentUrl + \"\".concat(key, \"=\").concat(encodeURIComponent(cell), \"&\");\n        });\n      } else if (value instanceof Date) {\n        currentUrl = currentUrl + \"\".concat(key, \"=\").concat(encodeURIComponent(moment(value).local().format('MM/DD/YYYY HH:mm:ss.SSS')), \"&\");\n      } else {\n        currentUrl = currentUrl + \"\".concat(key, \"=\").concat(encodeURIComponent(value), \"&\");\n      }\n\n      return currentUrl;\n    }, finalUrl);\n  }\n\n  return finalUrl;\n}\nexport function getJSON(baseUrl, queryPayload) {\n  var finalUrl = composeUrl(baseUrl, queryPayload);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    var contentType = response.headers.get(\"content-type\");\n\n    if (contentType && contentType.includes(\"application/json\")) {\n      return response.json();\n    }\n\n    throw new TypeError(\"Oops, we haven't got JSON!\");\n  }).then(function (response) {\n    if (response.hasOwnProperty('IsSuccess')) {\n      // Probably a NXResultContainer\n      if (response.IsSuccess === true) {\n        return response.Payload;\n      } else {\n        throw new Error(response.GeneralException);\n      }\n    } else return response;\n  });\n}\nexport function getSongFile(baseUrl, queryPayload) {\n  var finalUrl = baseUrl + '/' + queryPayload; // let finalUrl = composeUrl(baseUrl, queryPayload);\n\n  console.log(finalUrl);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'GET',\n    // credentials: 'include',\n    headers: {\n      'Accept': '*/*' // 'Content-Type': 'audio/mpeg'\n\n    }\n  }).then(function (response) {\n    console.log(response.headers.get('Content-Type'));\n    var contentType = response.headers.get('Content-Type');\n\n    if (contentType.includes('audio') === true) {\n      return response.url;\n    } else if (contentType === 'application/json') {\n      return response.json();\n    }\n  }).then(function (response) {\n    return response;\n  });\n}","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/services/serviceBase.js"],"names":["moment","currentServerBasePath","postJSON","url","bodyPayload","queryPayload","finalUrl","composeUrl","data","FormData","append","JSON","stringify","console","log","fetch","method","body","then","response","contentType","headers","get","includes","json","TypeError","hasOwnProperty","IsSuccess","Payload","Error","GeneralException","baseUrl","endsWith","Object","keys","reduce","currentUrl","key","value","Array","isArray","forEach","cell","encodeURIComponent","Date","local","format","getJSON","getSongFile"],"mappings":"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","sourcesContent":["import moment from \"moment/moment\";\n\nlet currentServerBasePath = 'http://localhost:6767';\n\n// noinspection JSAnnotator\nexport function postJSON(url: string, bodyPayload: any, queryPayload?: any) {\n  let finalUrl = composeUrl(url, queryPayload);\n  let data = new FormData();\n  data.append(\"json\", JSON.stringify(bodyPayload));\n  console.log(data);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'POST',\n    body: data\n  }).then(function (response) {\n    let contentType = response.headers.get(\"content-type\");\n    console.log(contentType);\n    if (contentType && contentType.includes(\"application/json\")) {\n      return response.json();\n    }\n    throw new TypeError(\"Oops, we haven't got JSON!\");\n  }).then((response: IJSONWrapper) => {\n    if (response.hasOwnProperty('IsSuccess')) {\n      // Probably a NXResultContainer\n      if (response.IsSuccess === true) {\n        return response.Payload;\n      } else {\n        throw new Error(response.GeneralException);\n      }\n    } else return response;\n  });\n}\n\nexport function composeUrl(baseUrl: string, queryPayload?: any): string {\n  let finalUrl = baseUrl;\n  if (queryPayload != null) {\n    if (!finalUrl.endsWith(\"?\"))\n      finalUrl = finalUrl + \"?\";\n\n    finalUrl = Object.keys(queryPayload).reduce((currentUrl, key) => {\n      let value = queryPayload[key];\n\n      if (Array.isArray(value)) {\n        value.forEach((cell) => {\n          currentUrl = currentUrl + `${key}=${encodeURIComponent(cell)}&`;\n        });\n      } else if (value instanceof Date) {\n        currentUrl = currentUrl + `${key}=${encodeURIComponent(moment(value).local().format('MM/DD/YYYY HH:mm:ss.SSS'))}&`;\n\n      } else {\n        currentUrl = currentUrl + `${key}=${encodeURIComponent(value)}&`;\n      }\n      return currentUrl;\n    }, finalUrl)\n  }\n  return finalUrl\n}\n\nexport function getJSON(baseUrl: string, queryPayload?: any) {\n  let finalUrl = composeUrl(baseUrl, queryPayload);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  }).then(function (response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/json\")) {\n      return response.json();\n    }\n    throw new TypeError(\"Oops, we haven't got JSON!\");\n  }).then((response) => {\n    if (response.hasOwnProperty('IsSuccess')) {\n      // Probably a NXResultContainer\n      if (response.IsSuccess === true) {\n        return response.Payload;\n      } else {\n        throw new Error(response.GeneralException);\n      }\n    } else return response;\n  })\n}\n\nexport function getSongFile(baseUrl: string, queryPayload?: any) {\n  let finalUrl = baseUrl + '/' + queryPayload;\n  // let finalUrl = composeUrl(baseUrl, queryPayload);\n  console.log(finalUrl);\n  return fetch(currentServerBasePath + finalUrl, {\n    method: 'GET',\n    // credentials: 'include',\n    headers: {\n      'Accept': '*/*',\n      // 'Content-Type': 'audio/mpeg'\n    },\n  }).then(response => {\n    console.log(response.headers.get('Content-Type'));\n    let contentType = response.headers.get('Content-Type');\n    if (contentType.includes('audio') === true) {\n      return response.url;\n    } else if (contentType === 'application/json') {\n      return response.json()\n    }\n  }).then(response => {\n    return response;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}