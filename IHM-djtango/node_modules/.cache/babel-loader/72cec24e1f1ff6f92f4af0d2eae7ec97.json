{"ast":null,"code":"import _objectSpread from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/data-line.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as playerActions from '../redux/actions/playerActions';\nimport * as sourceActions from '../redux/actions/sourceActions';\nimport * as dialogActions from '../redux/actions/dialogActions';\nimport dialogType from '../services/dialogTypeRef';\nimport { connect } from 'react-redux';\nimport { millisToMinutesAndSeconds, getTangoColors } from '../services/utils';\nimport Playing from '@material-ui/icons/VolumeUp';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { ItemTypes } from '../services/dj-const';\nimport { DragSource } from 'react-dnd';\nimport { withSnackbar } from \"notistack\";\nimport { getTranslate } from \"./locales/localeUtils\";\nvar tangoSource = {\n  beginDrag: function beginDrag(props) {\n    return {};\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar styles = {\n  root: {\n    display: 'flex',\n    flex: '1 1 auto',\n    float: 'left',\n    cursor: 'pointer'\n  },\n  cell: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    padding: '0px 2px 0px 2px'\n  },\n  center: {\n    textAlign: 'center'\n  }\n};\n\nvar DataLine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataLine, _Component);\n\n  function DataLine(props) {\n    var _this;\n\n    _classCallCheck(this, DataLine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataLine).call(this, props));\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null,\n        hover: false\n      });\n    };\n\n    _this.handleEditTango = function () {\n      _this.handleClose(); // console.log(this.props.index);\n\n\n      _this.props.dispatch(dialogActions.updateDialogAndShow(dialogType.TANGO_DETAILS, {\n        index: _this.props.index\n      }));\n    };\n\n    _this.handleLeftClick = function (event) {\n      var shouldAdd = event.ctrlKey || event.shiftKey;\n      var toAdd = [_this.props.index];\n\n      if (event.shiftKey) {\n        var maxIndex = _this.props.selectedTangos.reduce(function (a, b) {\n          return Math.max(a, b);\n        });\n\n        var minIndex = _this.props.selectedTangos.reduce(function (a, b) {\n          return Math.min(a, b);\n        });\n\n        if (_this.props.index > maxIndex) {\n          for (var i = maxIndex + 1; i < _this.props.index; i++) {\n            toAdd.push(i);\n          }\n        } else if (_this.props.index < minIndex) {\n          for (var _i = minIndex - 1; _i > _this.props.index; _i--) {\n            toAdd.push(_i);\n          }\n        }\n      }\n\n      _this.props.dispatch(sourceActions.updateSelectedTangoIndex(toAdd, _this.props.selectedTangos, shouldAdd));\n    };\n\n    _this.handleDoubleClick = function () {\n      var tango = _this.props.tango;\n      console.log(tango.path);\n\n      _this.props.dispatch(playerActions.updateCurrentTango(tango, _this.props.enqueueSnackbar));\n\n      _this.props.dispatch(sourceActions.updateCurrentIndex(_this.props.index));\n    };\n\n    _this.state = {\n      hover: false,\n      anchorEl: null,\n      anchorPosition: {\n        top: 0,\n        left: 0\n      },\n      isDragging: false\n    };\n    return _this;\n  }\n\n  _createClass(DataLine, [{\n    key: \"handleRightClick\",\n    value: function handleRightClick(event) {\n      // console.log(event.clientX);\n      var position = {\n        top: event.clientY - 35,\n        left: event.clientX - 20\n      };\n      this.setState({\n        anchorEl: event.currentTarget,\n        anchorPosition: position\n      });\n    }\n  }, {\n    key: \"getLineContent\",\n    value: function getLineContent() {\n      var _this2 = this;\n\n      var sizedRows = this.props.sizedRows;\n      var tango = this.props.tango;\n      var ret = [];\n      sizedRows.forEach(function (row) {\n        var style;\n\n        if (row.align === 'left') {\n          style = _objectSpread({}, styles.cell, {\n            maxWidth: row.size,\n            minWidth: row.size,\n            lineHeight: _this2.props.rowHeight + 'px'\n          });\n        } else if (row.align === 'center') {\n          style = _objectSpread({}, styles.cell, styles.center, {\n            maxWidth: row.size,\n            minWidth: row.size,\n            lineHeight: _this2.props.rowHeight + 'px'\n          });\n        }\n\n        if (row.field === 'genre' && !_this2.isTangoPlaying()) {\n          style = _objectSpread({}, style, {\n            backgroundColor: getTangoColors()[tango.genre.replace('-', '_')]\n          });\n        }\n\n        if (_this2.isInSelectedIndex() === true) {\n          style = _objectSpread({}, style, {\n            backgroundColor: 'black',\n            color: '#f50057'\n          });\n        }\n\n        var value = tango[row.field];\n\n        if (row.field === 'duration') {\n          value = millisToMinutesAndSeconds(value);\n        }\n\n        if (value === 'Unknown') {\n          value = \" - \";\n        }\n\n        if (row.field === 'played' && _this2.isTangoPlaying()) {\n          value = [React.createElement(Playing, {\n            style: {\n              color: 'white'\n            },\n            key: 'playing_beacon',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          })];\n        }\n\n        if (row.field === 'bpmHuman') {\n          // value = tango.bpmFromFile === 0 ? tango.bpmHuman : tango.bpmFromFile;\n          value = Math.round(tango[row.field] * 100) / 100;\n        }\n\n        ret.push(React.createElement(\"div\", {\n          key: tango._id + '_' + row.field,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, value));\n      });\n      return ret;\n    }\n  }, {\n    key: \"isTangoPlaying\",\n    value: function isTangoPlaying() {\n      return this.props.tango._id === this.props.playedId;\n    } // handleContextMenu(event) {\n    //\n    //   console.log('Display context menu');\n    //   this.handleRightClick(event);\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var connectDragSource = this.props.connectDragSource; // console.log('is dragging:' + isDragging);\n\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          anchorPosition = _this$state.anchorPosition;\n      var root, rootBase, translate;\n      translate = getTranslate(this.props.locale);\n      rootBase = _objectSpread({}, this.props.style, styles.root, {\n        WebkitUserSelect: 'none'\n      }); // tango = this.props.tango;\n\n      if (this.isTangoPlaying()) {\n        root = _objectSpread({}, rootBase, {\n          backgroundColor: '#3a3a3a',\n          color: '#1ba500'\n        });\n      } else {\n        root = _objectSpread({}, rootBase);\n      }\n\n      if (this.state.hover === true && this.props.isMilonga === false) {\n        root = _objectSpread({}, root, {\n          backgroundColor: '#272727'\n        });\n      } else if (this.state.hover === true && this.props.isMilonga === true && this.props.isDragging === true) {\n        console.log(\"I'm over a tango in milonga list\");\n        root = _objectSpread({}, root, {\n          borderBottom: '1px solid white'\n        });\n      } // let ref = this.props.tango.id;\n      // if (this.props.isMilonga === true) {\n      //   ref += 'milonga';\n      // }\n\n\n      return connectDragSource(React.createElement(\"div\", {\n        key: this.props.tango.id,\n        style: root,\n        onClick: this.handleLeftClick,\n        onDoubleClick: this.handleDoubleClick,\n        onMouseEnter: function onMouseEnter() {\n          _this3.setState({\n            hover: true\n          });\n        },\n        onMouseMove: function onMouseMove(event) {// console.log();\n          // console.log('Y:' + event.clientY, 'X:' + event.clientY);\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this3.setState({\n            hover: false\n          });\n        },\n        onContextMenu: function onContextMenu(event) {\n          event.preventDefault();\n          console.log('Display context menu');\n\n          _this3.handleRightClick(event);\n        },\n        draggable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.getLineContent(), React.createElement(Menu, {\n        id: \"simple-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        anchorReference: 'anchorPosition',\n        anchorPosition: anchorPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.handleEditTango,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, translate(\"EDIT_TANGO\")), React.createElement(MenuItem, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, translate(\"CALCULATE_BPM\")), React.createElement(MenuItem, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, translate(\"OPEN_WITH_AUDACITY\")))));\n    }\n  }, {\n    key: \"isInSelectedIndex\",\n    value: function isInSelectedIndex() {\n      var _this4 = this;\n\n      return this.props.selectedTangos.find(function (element) {\n        return element === _this4.props.index;\n      }) !== undefined;\n    }\n  }]);\n\n  return DataLine;\n}(Component);\n\nDataLine.defaultProps = {\n  isMilonga: false\n};\nDataLine.propTypes = {\n  tango: PropTypes.object.isRequired,\n  sizedRows: PropTypes.array.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  isMilonga: PropTypes.bool.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired\n};\nDataLine = DragSource(ItemTypes.TANGO, tangoSource, collect)(DataLine);\nvar myDataLine = withSnackbar(DataLine);\nexport default connect(function (store) {\n  return {\n    playedId: store.player.currentTango._id,\n    selectedTangos: store.source.selectedTangos\n  };\n})(myDataLine);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/data-line.js"],"names":["React","Component","PropTypes","playerActions","sourceActions","dialogActions","dialogType","connect","millisToMinutesAndSeconds","getTangoColors","Playing","Menu","MenuItem","ItemTypes","DragSource","withSnackbar","getTranslate","tangoSource","beginDrag","props","collect","monitor","connectDragSource","dragSource","isDragging","styles","root","display","flex","float","cursor","cell","whiteSpace","textOverflow","overflow","padding","center","textAlign","DataLine","handleClose","setState","anchorEl","hover","handleEditTango","dispatch","updateDialogAndShow","TANGO_DETAILS","index","handleLeftClick","event","shouldAdd","ctrlKey","shiftKey","toAdd","maxIndex","selectedTangos","reduce","a","b","Math","max","minIndex","min","i","push","updateSelectedTangoIndex","handleDoubleClick","tango","console","log","path","updateCurrentTango","enqueueSnackbar","updateCurrentIndex","state","anchorPosition","top","left","position","clientY","clientX","currentTarget","sizedRows","ret","forEach","row","style","align","maxWidth","size","minWidth","lineHeight","rowHeight","field","isTangoPlaying","backgroundColor","genre","replace","isInSelectedIndex","color","value","round","_id","playedId","rootBase","translate","locale","WebkitUserSelect","isMilonga","borderBottom","id","preventDefault","handleRightClick","getLineContent","Boolean","find","element","undefined","defaultProps","propTypes","object","isRequired","array","number","bool","func","TANGO","myDataLine","store","player","currentTango","source"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport * as playerActions from '../redux/actions/playerActions';\nimport * as sourceActions from '../redux/actions/sourceActions';\nimport * as dialogActions from '../redux/actions/dialogActions';\nimport dialogType from '../services/dialogTypeRef';\nimport {connect} from 'react-redux';\nimport {millisToMinutesAndSeconds, getTangoColors} from '../services/utils';\nimport Playing from '@material-ui/icons/VolumeUp';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {ItemTypes} from '../services/dj-const';\nimport {DragSource} from 'react-dnd';\nimport {withSnackbar} from \"notistack\";\nimport {getTranslate} from \"./locales/localeUtils\";\n\nconst tangoSource = {\n  beginDrag(props) {\n    return {};\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }\n}\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flex: '1 1 auto',\n    float: 'left',\n    cursor: 'pointer',\n  },\n  cell: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    padding: '0px 2px 0px 2px',\n\n  },\n  center: {\n    textAlign: 'center',\n  }\n};\n\n\nclass DataLine extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      anchorEl: null,\n      anchorPosition: {top: 0, left: 0},\n      isDragging: false,\n    }\n  }\n\n  handleClose = () => {\n    this.setState({anchorEl: null, hover: false});\n  };\n  handleEditTango = () => {\n    this.handleClose();\n    // console.log(this.props.index);\n    this.props.dispatch(dialogActions.updateDialogAndShow(dialogType.TANGO_DETAILS, {index: this.props.index}));\n  };\n\n  handleRightClick(event) {\n    // console.log(event.clientX);\n    let position = {top: event.clientY - 35, left: event.clientX - 20};\n    this.setState({anchorEl: event.currentTarget, anchorPosition: position});\n  };\n\n  handleLeftClick = (event) => {\n    let shouldAdd = event.ctrlKey || event.shiftKey;\n    let toAdd = [this.props.index,];\n    if (event.shiftKey) {\n      let maxIndex = this.props.selectedTangos.reduce(function (a, b) {\n        return Math.max(a, b);\n      });\n      let minIndex = this.props.selectedTangos.reduce(function (a, b) {\n        return Math.min(a, b);\n      });\n      if (this.props.index > maxIndex) {\n        for (let i = maxIndex + 1; i < this.props.index; i++) {\n          toAdd.push(i);\n        }\n      } else if (this.props.index < minIndex) {\n        for (let i = minIndex - 1; i > this.props.index; i--) {\n          toAdd.push(i);\n        }\n      }\n    }\n    this.props.dispatch(sourceActions.updateSelectedTangoIndex(toAdd, this.props.selectedTangos, shouldAdd));\n  };\n\n\n  handleDoubleClick = () => {\n    let tango = this.props.tango;\n    console.log(tango.path);\n    this.props.dispatch(playerActions.updateCurrentTango(tango, this.props.enqueueSnackbar));\n    this.props.dispatch(sourceActions.updateCurrentIndex(this.props.index))\n\n  };\n\n  getLineContent() {\n    let sizedRows = this.props.sizedRows;\n    let tango: tangoDTO = this.props.tango;\n    let ret = [];\n    sizedRows.forEach(row => {\n      let style;\n      if (row.align === 'left') {\n        style = {...styles.cell, maxWidth: row.size, minWidth: row.size, lineHeight: this.props.rowHeight + 'px'};\n      } else if (row.align === 'center') {\n        style = {\n          ...styles.cell, ...styles.center,\n          maxWidth: row.size,\n          minWidth: row.size,\n          lineHeight: this.props.rowHeight + 'px'\n        };\n      }\n\n      if (row.field === 'genre' && !this.isTangoPlaying()) {\n        style = {...style, backgroundColor: getTangoColors()[tango.genre.replace('-', '_')]};\n      }\n\n      if (this.isInSelectedIndex() === true) {\n        style = {...style, backgroundColor: 'black', color: '#f50057'}\n      }\n\n      let value = tango[row.field];\n      if (row.field === 'duration') {\n        value = millisToMinutesAndSeconds(value)\n      }\n      if (value === 'Unknown') {\n        value = \" - \";\n      }\n      if (row.field === 'played' && this.isTangoPlaying()) {\n        value = [<Playing style={{color: 'white'}} key={'playing_beacon'}/>];\n      }\n\n      if (row.field === 'bpmHuman') {\n        // value = tango.bpmFromFile === 0 ? tango.bpmHuman : tango.bpmFromFile;\n        value = Math.round(tango[row.field] * 100) / 100\n      }\n\n      ret.push(\n        <div key={tango._id + '_' + row.field} style={style}>{value}</div>\n      );\n    });\n    return ret;\n\n  }\n\n\n  isTangoPlaying() {\n    return this.props.tango._id === this.props.playedId;\n  }\n\n  // handleContextMenu(event) {\n  //\n  //   console.log('Display context menu');\n  //   this.handleRightClick(event);\n  // }\n\n  render() {\n\n    const {connectDragSource, /*isDragging*/} = this.props;\n    // console.log('is dragging:' + isDragging);\n    const {anchorEl, anchorPosition} = this.state;\n    let root, rootBase, translate;\n    translate = getTranslate(this.props.locale);\n    rootBase = {...this.props.style, ...styles.root, WebkitUserSelect: 'none'};\n    // tango = this.props.tango;\n    if (this.isTangoPlaying()) {\n      root = {...rootBase, backgroundColor: '#3a3a3a', color: '#1ba500'}\n    } else {\n      root = {...rootBase};\n    }\n\n    if (this.state.hover === true && this.props.isMilonga === false) {\n      root = {...root, backgroundColor: '#272727'}\n    } else if (this.state.hover === true && this.props.isMilonga === true && this.props.isDragging === true) {\n      console.log(\"I'm over a tango in milonga list\");\n      root = {...root, borderBottom: '1px solid white'}\n    }\n    // let ref = this.props.tango.id;\n    // if (this.props.isMilonga === true) {\n    //   ref += 'milonga';\n    // }\n    return connectDragSource(\n      <div\n        key={this.props.tango.id}\n        style={root}\n        onClick={this.handleLeftClick}\n        onDoubleClick={this.handleDoubleClick}\n        onMouseEnter={() => {\n          this.setState({hover: true})\n        }}\n        onMouseMove={event => {\n          // console.log();\n          // console.log('Y:' + event.clientY, 'X:' + event.clientY);\n        }}\n        onMouseLeave={() => {\n          this.setState({hover: false})\n        }}\n        onContextMenu={(event) => {\n          event.preventDefault();\n          console.log('Display context menu');\n          this.handleRightClick(event);\n        }}\n\n        draggable={true}\n      >\n        {this.getLineContent()}\n\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          anchorReference={'anchorPosition'}\n          anchorPosition={anchorPosition}\n        >\n          <MenuItem onClick={this.handleEditTango}>{translate(\"EDIT_TANGO\")}</MenuItem>\n          <MenuItem onClick={this.handleClose}>{translate(\"CALCULATE_BPM\")}</MenuItem>\n          <MenuItem onClick={this.handleClose}>{translate(\"OPEN_WITH_AUDACITY\")}</MenuItem>\n        </Menu>\n\n      </div>\n    );\n  }\n\n  isInSelectedIndex() {\n    return this.props.selectedTangos.find(element => {\n      return element === this.props.index\n    }) !== undefined;\n  }\n}\n\nDataLine.defaultProps = {\n  isMilonga: false,\n\n};\n\n\nDataLine.propTypes = {\n  tango: PropTypes.object.isRequired,\n  sizedRows: PropTypes.array.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  isMilonga: PropTypes.bool.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired\n};\n\nDataLine = DragSource(ItemTypes.TANGO, tangoSource, collect)(DataLine);\n\nconst myDataLine = withSnackbar(DataLine);\nexport default connect((store) => {\n  return {\n    playedId: store.player.currentTango._id,\n    selectedTangos: store.source.selectedTangos,\n  }\n})(myDataLine);\n"]},"metadata":{},"sourceType":"module"}