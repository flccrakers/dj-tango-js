{"ast":null,"code":"import _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTranslate } from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"../header\";\n\nvar templateClassName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(templateClassName, _Component);\n\n  function templateClassName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, templateClassName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(templateClassName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCloseDialog = function () {\n      _this.props.dispatch(dialogActions.closeDialog());\n    };\n\n    return _this;\n  }\n\n  _createClass(templateClassName, [{\n    key: \"getContentText\",\n    value: function getContentText() {\n      return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"databaseFile\",\n        label: \"Database file\",\n        type: \"txt\" // fullWidth\n        ,\n        value: this.state.databaseFile ? this.state.databaseFile.name : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        accept: \"text/csv\",\n        style: styles.input,\n        id: \"raised-button-file\",\n        multiple: true,\n        type: \"file\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            databaseFile: e.target.files[0]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"raised-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: 'contained',\n        component: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Select File\")));\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      var translate = getTranslate(this.props.locale);\n      return [React.createElement(Button, {\n        key: 'close_button',\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, translate('CLOSE'))];\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, getTranslate(this.props.locale)('IMPORT_DATABASE'));\n    }\n    /******************************************************/\n\n    /*Fixed part of the dialog, don't touch that          */\n\n    /******************************************************/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialog = this.props.dialog;\n      return React.createElement(Dialog, {\n        open: dialog.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.getTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.getContentText())), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.getActions()));\n    }\n  }]);\n\n  return templateClassName;\n}(Component);\n\nexport default connect(function (store) {\n  return {\n    dialog: store.dialog,\n    locale: store.locale\n  };\n})(templateClassName);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js"],"names":["React","Component","connect","Dialog","DialogActions","DialogContent","DialogTitle","dialogActions","Button","getTranslate","DialogContentText","TextField","templateClassName","handleCloseDialog","props","dispatch","closeDialog","locale","state","databaseFile","name","styles","input","e","setState","target","files","translate","dialog","open","getTitle","whiteSpace","getContentText","getActions","store"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {getTranslate} from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"../header\";\n\n\nclass templateClassName extends Component {\n\n  getContentText() {\n    return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n  };\n\n  getContent() {\n    return (\n      <div>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"databaseFile\"\n          label=\"Database file\"\n          type=\"txt\"\n          // fullWidth\n          value={this.state.databaseFile ? this.state.databaseFile.name : ''}\n        />\n        <input\n          accept=\"text/csv\"\n          style={styles.input}\n          id=\"raised-button-file\"\n          multiple\n          type=\"file\"\n          onChange={e => {\n            this.setState({databaseFile: e.target.files[0]})\n          }}\n        />\n        <label htmlFor=\"raised-button-file\">\n          <Button variant={'contained'} component=\"span\">\n            Select File\n          </Button>\n        </label>\n      </div>\n    );\n  }\n\n  getActions() {\n    let translate = getTranslate(this.props.locale);\n    return [\n      <Button\n        key={'close_button'}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={this.handleCloseDialog}>\n        {translate('CLOSE')}\n      </Button>,\n    ];\n  }\n\n  getTitle() {\n    return (<div>{getTranslate(this.props.locale)('IMPORT_DATABASE')}</div>);\n  }\n\n\n  /******************************************************/\n  /*Fixed part of the dialog, don't touch that          */\n  /******************************************************/\n  handleCloseDialog = () => {\n    this.props.dispatch(dialogActions.closeDialog());\n  };\n\n  render() {\n    let dialog: dialogReducerDTO = this.props.dialog;\n\n    return (\n      <Dialog open={dialog.open}>\n        <DialogTitle>{this.getTitle()}</DialogTitle>\n        <DialogContent>\n          <DialogContentText style={{whiteSpace: 'pre-wrap'}}>\n            {this.getContentText()}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {this.getActions()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default connect(store => {\n  return {\n    dialog: store.dialog,\n    locale: store.locale,\n  };\n})(templateClassName);\n\n"]},"metadata":{},"sourceType":"module"}