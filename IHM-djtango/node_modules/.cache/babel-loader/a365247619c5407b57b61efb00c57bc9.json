{"ast":null,"code":"import * as tangoDataManagement from '../../services/tangoDataManagement';\nimport { sortStatus as SORT } from \"../../services/dj-const\";\n\nfunction receivedAllTangos(tangoList) {\n  return {\n    type: 'GET_ALL_TANGOS',\n    payload: tangoList\n  };\n}\n\nfunction updateDisplayTangosList(tangoList) {\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: tangoList\n  };\n}\n\nexport function fetchAllTangos() {\n  var resetDisplayList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return function (dispatch) {\n    tangoDataManagement.getAllTangos().then(function (tangoList) {\n      dispatch(generateFilterList(['artist', 'singer', 'album', 'genre'], tangoList));\n      dispatch(receivedAllTangos(tangoList));\n\n      if (resetDisplayList === true) {\n        dispatch(updateDisplayTangosList(tangoList));\n      }\n    });\n  };\n}\n\nfunction generateFilterList(fields, tangoList) {\n  var ret = {};\n  fields.forEach(function (field) {\n    ret[field] = [];\n  }); // if this.props.source.tangoList\n\n  tangoList.forEach(function (tango) {\n    fields.forEach(function (field) {\n      if (!ret[field].some(function (element) {\n        return element === tango[field];\n      })) {\n        ret[field].push(tango[field]);\n      }\n    });\n  });\n  fields.forEach(function (field) {\n    ret[field] = ret[field].sort();\n  });\n  fields.forEach(function (field) {\n    ret[field].unshift(('select - ' + field).toUpperCase());\n  });\n  return {\n    type: 'UPDATE_FILTER_LIST',\n    payload: ret\n  };\n}\n\nfunction updateSortStatus(field, status) {\n  return {\n    type: 'UPDATE_SORT_STATUS',\n    payload: {\n      field: field,\n      status: status\n    }\n  };\n}\n\nexport function updateSortStatusAndSort(field, status, data) {\n  return function (dispatch) {\n    console.log('status:' + status);\n\n    if (status === 2) {\n      status = 0;\n    } else {\n      status = status + 1;\n    }\n\n    dispatch(updateSortStatus(field, status));\n    dispatch(sortDatas(data, field, status));\n  };\n}\nexport function sortDatas(datas, field, sortDirection) {\n  return function (dispatch) {\n    if (typeof datas[0][field] === 'string') {\n      dispatch(sortStrings(datas, field, sortDirection));\n    } else if (typeof datas[0][field] === 'number') {\n      dispatch(sortNumbers(datas, field, sortDirection));\n    } else if (field === '') {\n      // console.log(\"there si no sorting filter\");\n      dispatch(updateDisplayTangosList(datas));\n    }\n  };\n}\n\nfunction sortStrings(datas, field, sortDirection) {\n  datas.sort(function (a, b) {\n    return a[field].localeCompare(b[field]);\n  });\n\n  if (sortDirection === SORT.DESC) {\n    datas.reverse();\n  }\n\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: datas\n  };\n}\n\nexport function updateCurrentIndex(index) {\n  return {\n    type: 'UPDATE_CURRENT_INDEX',\n    payload: index\n  };\n}\n\nfunction tangoIndexInCurrentSelected(index, currentSelected) {\n  return currentSelected.findIndex(function (element) {\n    return element === index;\n  });\n}\n/**\n *\n * @param index: number[] -> the index array to add to the table\n * @param currentSelectedIndex -> the current table\n * @param shouldAdd:boolean -> if true should add, else empty the table and replace by the index array\n */\n\n\nexport function updateSelectedTangoIndex(index, currentSelectedIndex, shouldAdd) {\n  var newSelectedIndex = currentSelectedIndex.slice();\n  index.forEach(function (id) {\n    var indexOfTango = tangoIndexInCurrentSelected(id, currentSelectedIndex);\n\n    if (indexOfTango === -1) {\n      if (shouldAdd === true) {\n        newSelectedIndex.push(id);\n      } else {\n        newSelectedIndex = [id];\n      }\n    } else {\n      currentSelectedIndex.splice(indexOfTango, 1);\n      newSelectedIndex = currentSelectedIndex.slice();\n    }\n  });\n  return {\n    type: 'UPDATE_SELECTED_TANGO_INDEX',\n    payload: newSelectedIndex\n  };\n}\n\nfunction shuffle(arrayToShuffle) {\n  for (var i = arrayToShuffle.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [arrayToShuffle[j], arrayToShuffle[i]];\n    arrayToShuffle[i] = _ref[0];\n    arrayToShuffle[j] = _ref[1];\n  }\n\n  return arrayToShuffle;\n}\n\nexport function shuffleTangoList(tangoList) {\n  return function (dispatch) {\n    dispatch(updateDisplayTangosList(shuffle(tangoList)));\n  };\n}\n\nfunction sortNumbers(datas, field, sortDirection) {\n  datas.sort(function (a, b) {\n    if (a[field] > b[field]) {\n      return 1;\n    }\n\n    if (a[field] < b[field]) {\n      return -1;\n    }\n\n    return 0;\n  });\n\n  if (sortDirection === SORT.DESC) {\n    datas.reverse();\n  }\n\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: datas\n  };\n}\n\nexport function filterTangoList(selectedIndex, filterList, tangoList, sortingDatas) {\n  return function (dispatch) {\n    var fieldToSearch = {};\n    Object.keys(selectedIndex).forEach(function (key) {\n      if (selectedIndex[key] > 0) {\n        console.log(filterList[key][selectedIndex[key]]);\n        fieldToSearch[key] = filterList[key][selectedIndex[key]];\n      }\n    });\n    var newTangoList = tangoList.filter(function (tango) {\n      var ret = true;\n      Object.keys(fieldToSearch).forEach(function (key) {\n        if (fieldToSearch[key] !== tango[key]) {\n          ret = false;\n        }\n      });\n      return ret;\n    });\n    dispatch(sortDatas(newTangoList, sortingDatas.sortingField, sortingDatas.sortingDirection));\n  };\n}\nexport function updateFilter(anchorEl, selectedIndex) {\n  return {\n    type: \"UPDATE_FILTER\",\n    payload: {\n      anchorEl: anchorEl,\n      selectedIndex: selectedIndex\n    }\n  };\n}\nexport function updateAnchorState(anchorEl) {\n  console.log('should update anchor states');\n  return {\n    type: \"UPDATE_ANCHOR_STATE\",\n    payload: anchorEl\n  };\n}\n\nfunction clearFilterFullfill(filter) {\n  return {\n    type: \"UPDATE_FILTER\",\n    payload: filter\n  };\n}\n\nexport function clearFilter(filterList, tangoList, sortingDatas) {\n  return function (dispatch) {\n    var filter = {\n      anchorEl: {\n        artist: null,\n        album: null,\n        singer: null,\n        genre: null\n      },\n      selectedIndex: {\n        artist: 0,\n        album: 0,\n        singer: 0,\n        genre: 0\n      }\n    };\n    dispatch(clearFilterFullfill(filter));\n    dispatch(filterTangoList(filter.selectedIndex, filterList, tangoList, sortingDatas));\n    dispatch(generateFilterList(['artist', 'singer', 'album', 'genre'], tangoList));\n  };\n}","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/dj-tango-js/IHM-djtango/src/redux/actions/sourceActions.js"],"names":["tangoDataManagement","sortStatus","SORT","receivedAllTangos","tangoList","type","payload","updateDisplayTangosList","fetchAllTangos","resetDisplayList","dispatch","getAllTangos","then","generateFilterList","fields","ret","forEach","field","tango","some","element","push","sort","unshift","toUpperCase","updateSortStatus","status","updateSortStatusAndSort","data","console","log","sortDatas","datas","sortDirection","sortStrings","sortNumbers","a","b","localeCompare","DESC","reverse","updateCurrentIndex","index","tangoIndexInCurrentSelected","currentSelected","findIndex","updateSelectedTangoIndex","currentSelectedIndex","shouldAdd","newSelectedIndex","slice","id","indexOfTango","splice","shuffle","arrayToShuffle","i","length","j","Math","floor","random","shuffleTangoList","filterTangoList","selectedIndex","filterList","sortingDatas","fieldToSearch","Object","keys","key","newTangoList","filter","sortingField","sortingDirection","updateFilter","anchorEl","updateAnchorState","clearFilterFullfill","clearFilter","artist","album","singer","genre"],"mappings":"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","sourcesContent":["import * as tangoDataManagement from '../../services/tangoDataManagement';\nimport {sortStatus as SORT} from \"../../services/dj-const\";\n\nfunction receivedAllTangos(tangoList) {\n  return {\n    type: 'GET_ALL_TANGOS',\n    payload: tangoList,\n  }\n}\n\nfunction updateDisplayTangosList(tangoList) {\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: tangoList,\n  }\n}\n\nexport function fetchAllTangos(resetDisplayList = false) {\n  return function (dispatch) {\n\n    tangoDataManagement.getAllTangos().then((tangoList) => {\n      dispatch(generateFilterList(['artist', 'singer', 'album', 'genre',], tangoList));\n      dispatch(receivedAllTangos(tangoList));\n      if (resetDisplayList === true) {\n        dispatch(updateDisplayTangosList(tangoList));\n      }\n    });\n  }\n}\n\nfunction generateFilterList(fields, tangoList) {\n\n  let ret = {};\n  fields.forEach(field => {\n    ret[field] = [];\n  });\n  // if this.props.source.tangoList\n\n  tangoList.forEach((tango => {\n    fields.forEach(field => {\n\n      if (!ret[field].some(element => {\n          return element === tango[field]\n        })) {\n        ret[field].push(tango[field]);\n      }\n    })\n  }));\n  fields.forEach(field => {\n    ret[field] = ret[field].sort();\n  });\n  fields.forEach(field => {\n    ret[field].unshift(('select - ' + field).toUpperCase());\n  });\n\n  return {\n    type: 'UPDATE_FILTER_LIST',\n    payload: ret,\n  }\n}\n\n\nfunction updateSortStatus(field, status) {\n  return {\n    type: 'UPDATE_SORT_STATUS',\n    payload: {field, status}\n  }\n}\n\nexport function updateSortStatusAndSort(field, status, data) {\n  return function (dispatch) {\n    console.log('status:' + status);\n    if (status === 2) {\n      status = 0\n    }\n    else {\n      status = status + 1;\n    }\n    dispatch(updateSortStatus(field, status));\n    dispatch(sortDatas(data, field, status));\n\n  }\n}\n\nexport function sortDatas(datas, field, sortDirection) {\n  return function (dispatch) {\n    if (typeof datas[0][field] === 'string') {\n      dispatch(sortStrings(datas, field, sortDirection));\n    } else if (typeof datas[0][field] === 'number') {\n      dispatch(sortNumbers(datas, field, sortDirection));\n    } else if (field === '') {\n      // console.log(\"there si no sorting filter\");\n      dispatch(updateDisplayTangosList(datas));\n    }\n  }\n}\n\nfunction sortStrings(datas, field, sortDirection) {\n  datas.sort((a, b) => {\n    return a[field].localeCompare(b[field]);\n  });\n  if (sortDirection === SORT.DESC) {\n    datas.reverse()\n  }\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: datas,\n  }\n}\n\nexport function updateCurrentIndex(index) {\n  return {\n    type: 'UPDATE_CURRENT_INDEX',\n    payload: index,\n  }\n}\n\nfunction tangoIndexInCurrentSelected(index, currentSelected){\n  return currentSelected.findIndex(element=>{return element === index})\n}\n/**\n *\n * @param index: number[] -> the index array to add to the table\n * @param currentSelectedIndex -> the current table\n * @param shouldAdd:boolean -> if true should add, else empty the table and replace by the index array\n */\nexport function updateSelectedTangoIndex(index, currentSelectedIndex, shouldAdd){\n  let newSelectedIndex = currentSelectedIndex.slice();\n  index.forEach(id =>{\n    let indexOfTango = tangoIndexInCurrentSelected(id, currentSelectedIndex);\n    if (indexOfTango === -1){\n      if(shouldAdd === true){\n        newSelectedIndex.push(id);\n      } else{\n        newSelectedIndex = [id,];\n      }\n    }else{\n      currentSelectedIndex.splice(indexOfTango,1);\n      newSelectedIndex = currentSelectedIndex.slice();\n    }\n  });\n\n  return{\n    type:'UPDATE_SELECTED_TANGO_INDEX',\n    payload:newSelectedIndex,\n  }\n\n}\n\n\nfunction shuffle(arrayToShuffle) {\n  for (let i = arrayToShuffle.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arrayToShuffle[i], arrayToShuffle[j]] = [arrayToShuffle[j], arrayToShuffle[i]];\n  }\n  return arrayToShuffle;\n}\n\nexport function shuffleTangoList(tangoList) {\n  return function (dispatch) {\n    dispatch(updateDisplayTangosList(shuffle(tangoList)));\n  }\n}\n\nfunction sortNumbers(datas, field, sortDirection) {\n  datas.sort((a, b) => {\n    if (a[field] > b[field]) {\n      return 1\n    }\n    if (a[field] < b[field]) {\n      return -1\n    }\n    return 0;\n  });\n  if (sortDirection === SORT.DESC) {\n    datas.reverse()\n  }\n  return {\n    type: 'UPDATE_DISPLAY_TANGO_LIST',\n    payload: datas,\n  }\n}\n\nexport function filterTangoList(selectedIndex, filterList, tangoList: tango[], sortingDatas: sortingDataDTO) {\n  return function (dispatch) {\n    let fieldToSearch = {};\n    Object.keys(selectedIndex).forEach(key => {\n      if (selectedIndex[key] > 0) {\n        console.log(filterList[key][selectedIndex[key]]);\n        fieldToSearch[key] = filterList[key][selectedIndex[key]];\n      }\n    });\n\n    let newTangoList = tangoList.filter((tango => {\n\n      let ret = true;\n      Object.keys(fieldToSearch).forEach(key => {\n        if (fieldToSearch[key] !== tango[key]) {\n          ret = false;\n        }\n\n      });\n      return ret\n\n    }));\n    dispatch(sortDatas(newTangoList, sortingDatas.sortingField, sortingDatas.sortingDirection))\n  }\n}\n\nexport function updateFilter(anchorEl, selectedIndex) {\n\n\n  return {\n    type: \"UPDATE_FILTER\",\n    payload: {anchorEl, selectedIndex}\n  }\n\n}\n\nexport function updateAnchorState(anchorEl) {\n  console.log('should update anchor states');\n  return {\n    type: \"UPDATE_ANCHOR_STATE\",\n    payload: anchorEl,\n  }\n\n}\n\nfunction clearFilterFullfill(filter) {\n\n  return {\n    type: \"UPDATE_FILTER\",\n    payload: filter,\n  }\n}\n\nexport function clearFilter(filterList, tangoList: tango[], sortingDatas: sortingDataDTO) {\n  return function (dispatch) {\n    let filter = {\n      anchorEl: {artist: null, album: null, singer: null, genre: null},\n      selectedIndex: {artist: 0, album: 0, singer: 0, genre: 0},\n    };\n    dispatch(clearFilterFullfill(filter));\n    dispatch(filterTangoList(filter.selectedIndex, filterList, tangoList, sortingDatas));\n    dispatch(generateFilterList(['artist', 'singer', 'album', 'genre',], tangoList));\n\n\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}