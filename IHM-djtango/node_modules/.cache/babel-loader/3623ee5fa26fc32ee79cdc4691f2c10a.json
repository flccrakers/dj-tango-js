{"ast":null,"code":"import _classCallCheck from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTranslate } from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nvar templateClassName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(templateClassName, _Component);\n\n  function templateClassName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, templateClassName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(templateClassName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCloseDialog = function () {\n      _this.props.dispatch(dialogActions.closeDialog());\n    };\n\n    return _this;\n  }\n\n  _createClass(templateClassName, [{\n    key: \"getContentText\",\n    value: function getContentText() {\n      return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      var translate = getTranslate(this.props.locale);\n      return [React.createElement(Button, {\n        key: 'close_button',\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, translate('CLOSE'))];\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, getTranslate(this.props.locale)('IMPORT_DATABASE'));\n    }\n    /******************************************************/\n\n    /*Fixed part of the dialog, don't touch that          */\n\n    /******************************************************/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialog = this.props.dialog;\n      return React.createElement(Dialog, {\n        open: dialog.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.getTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.getContentText())), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.getActions()));\n    }\n  }]);\n\n  return templateClassName;\n}(Component);\n\nexport default connect(function (store) {\n  return {\n    dialog: store.dialog,\n    locale: store.locale\n  };\n})(templateClassName);","map":{"version":3,"sources":["/home/hoonakker/Dropbox/dvt/projet-JAVASCRIPT/react-tutos/dj-tango-js/IHM/src/components/dialogs/import-database-dialog.js"],"names":["React","Component","connect","Dialog","DialogActions","DialogContent","DialogTitle","dialogActions","Button","getTranslate","DialogContentText","templateClassName","handleCloseDialog","props","dispatch","closeDialog","locale","translate","dialog","open","getTitle","whiteSpace","getContentText","getActions","store"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;IAGMC,iB;;;;;;;;;;;;;;;;;;UA2BJC,iB,GAAoB,YAAM;AACxB,YAAKC,KAAL,CAAWC,QAAX,CAAoBP,aAAa,CAACQ,WAAd,EAApB;AACD,K;;;;;;;qCA3BgB;AACf,aAAON,YAAY,CAAC,KAAKI,KAAL,CAAWG,MAAZ,CAAZ,CAAgC,sBAAhC,CAAP;AACD;;;iCAEY;AACX,UAAIC,SAAS,GAAGR,YAAY,CAAC,KAAKI,KAAL,CAAWG,MAAZ,CAA5B;AACA,aAAO,CACL,oBAAC,MAAD;AACE,QAAA,GAAG,EAAE,cADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,OAAO,EAAE,KAAKJ,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGK,SAAS,CAAC,OAAD,CALZ,CADK,CAAP;AASD;;;+BAEU;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMR,YAAY,CAAC,KAAKI,KAAL,CAAWG,MAAZ,CAAZ,CAAgC,iBAAhC,CAAN,CAAR;AACD;AAGD;;AACA;;AACA;;;;6BAKS;AACP,UAAIE,MAAwB,GAAG,KAAKL,KAAL,CAAWK,MAA1C;AAEA,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA,MAAM,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKC,QAAL,EAAd,CADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,cAAL,EADH,CADF,CAFF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,EADH,CAPF,CADF;AAaD;;;;EA/C6BtB,S;;AAkDhC,eAAeC,OAAO,CAAC,UAAAsB,KAAK,EAAI;AAC9B,SAAO;AACLN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MADT;AAELF,IAAAA,MAAM,EAAEQ,KAAK,CAACR;AAFT,GAAP;AAID,CALqB,CAAP,CAKZL,iBALY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as dialogActions from \"../../redux/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {getTranslate} from '../locales/localeUtils';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\n\nclass templateClassName extends Component {\n\n  getContentText() {\n    return getTranslate(this.props.locale)('IMPORT_DATABASE_TEXT');\n  };\n\n  getActions() {\n    let translate = getTranslate(this.props.locale);\n    return [\n      <Button\n        key={'close_button'}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={this.handleCloseDialog}>\n        {translate('CLOSE')}\n      </Button>,\n    ];\n  }\n\n  getTitle() {\n    return (<div>{getTranslate(this.props.locale)('IMPORT_DATABASE')}</div>);\n  }\n\n\n  /******************************************************/\n  /*Fixed part of the dialog, don't touch that          */\n  /******************************************************/\n  handleCloseDialog = () => {\n    this.props.dispatch(dialogActions.closeDialog());\n  };\n\n  render() {\n    let dialog: dialogReducerDTO = this.props.dialog;\n\n    return (\n      <Dialog open={dialog.open}>\n        <DialogTitle>{this.getTitle()}</DialogTitle>\n        <DialogContent>\n          <DialogContentText style={{whiteSpace:'pre'}}>\n            {this.getContentText()}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {this.getActions()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default connect(store => {\n  return {\n    dialog: store.dialog,\n    locale: store.locale,\n  };\n})(templateClassName);\n\n"]},"metadata":{},"sourceType":"module"}